package fxrubkinkuutio.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import fxrubkinkuutio.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2024.04.29 17:37:26 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class SekoitusTest {



  // Generated by ComTest BEGIN
  /** testRekisteroi70 */
  @Test
  public void testRekisteroi70() {    // Sekoitus: 70
    Sekoitus sek1 = new Sekoitus(); 
    assertEquals("From: Sekoitus line: 72", 0, sek1.getId()); 
    sek1.rekisteroi(); 
    Sekoitus sek2 = new Sekoitus(); 
    sek2.rekisteroi(); 
    int n1 = sek1.getId(); 
    int n2 = sek2.getId(); 
    assertEquals("From: Sekoitus line: 78", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString124 */
  @Test
  public void testToString124() {    // Sekoitus: 124
    Sekoitus sekoitus = new Sekoitus(); 
    sekoitus.parse("2|L' D F2 D2 R F R' U2 L B2 U L F2 B' R U' R2 D' U2 B"); 
    assertEquals("From: Sekoitus line: 127", "2|L' D F2 D2 R F R' U2 L B2 U L F2 B' R U' R2 D' U2 B|", sekoitus.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse149 */
  @Test
  public void testParse149() {    // Sekoitus: 149
    Sekoitus sekoitus = new Sekoitus(); 
    sekoitus.parse("2|L' D F2 D2 R F R' U2 L B2 U L F2 B' R U' R2 D' U2 B"); 
    assertEquals("From: Sekoitus line: 152", "2|L' D F2 D2 R F R' U2 L B2 U L F2 B' R U' R2 D' U2 B|", sekoitus.toString()); 
    sekoitus.rekisteroi(); 
    int n = sekoitus.getId(); 
    sekoitus.parse(""+(n+20)); 
    sekoitus.rekisteroi(); 
    assertEquals("From: Sekoitus line: 158", n+20+1, sekoitus.getId()); 
    assertEquals("From: Sekoitus line: 159", "" + (n+20+1) + "|L' D F2 D2 R F R' U2 L B2 U L F2 B' R U' R2 D' U2 B|", sekoitus.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone173 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone173() throws CloneNotSupportedException {    // Sekoitus: 173
    Sekoitus sek = new Sekoitus(); 
    sek.parse("   2   |  R' F2 B F2 U' L B2 F R L' "); 
    Sekoitus kopio = sek.clone(); 
    assertEquals("From: Sekoitus line: 178", sek.toString(), kopio.toString()); 
    sek.parse("   1   |  U B D2 B' F2 U R' U L D' "); 
    assertEquals("From: Sekoitus line: 180", false, kopio.toString().equals(sek.toString())); 
  } // Generated by ComTest END
}